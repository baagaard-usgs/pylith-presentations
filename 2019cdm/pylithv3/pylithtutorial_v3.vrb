\frametitle{Parameter Files}
  \summary{Simple syntax for specifying parameters for properties and components}

\begin{cfg}
# Syntax
<h>[pylithapp.COMPONENT.SUBCOMPONENT]</h> ; Inline comment
<f>COMPONENT</f> = OBJECT
<p>PARAMETER</p> = VALUE

# Example
<h>[pylithapp.mesh_generator]</h> ; Header indicates path of mesh_generator in hierarchy
<f>reader</f> = pylith.meshio.MeshIOCubit ; Use mesh from CUBIT/Trelis
<p>reader.filename</p> = mesh_quad4.exo ; Set filename of mesh.
<p>reader.coordsys.space_dim</p> = 2 ; Set coordinate system of mesh.

<h>[pylithapp.problem.solution_outputs.output]</h> ; Set output format
<f>writer</f> = pylith.meshio.DataWriterHDF5
<p>writer.filename</p> = axialdisp.h5

<h>[pylithapp.problem]</h>
<f>bc</f> = [x_neg, x_pos, y_neg] ; Create array of boundary conditions
<f>bc.x_neg</f> = pylith.bc.DirichletTimeDependent ; Set type of boundary condition
<f>bc.x_pos</f> = pylith.bc.DirichletTimeDependent
<f>bc.y_neg</f> = pylith.bc.DirichletTimeDependent

<h>[pylithapp.problem.bc.x_pos]</h> ; Boundary condition for +x
<p>constrained_dof</p> = [0] ; Constrain x DOF
<p>label</p> = edge_xpos ; Name of nodeset from CUBIT/Trelis
<f>db_auxiliary_fields</f> = spatialdata.spatialdb.SimpleDB ; Set type of spatial database
<p>db_auxiliary_fields.label</p> = Dirichlet BC +x edge
<p>db_auxiliary_fields.iohandler.filename</p> = axial_disp.spatialdb ; Filename for database
\end{cfg}

